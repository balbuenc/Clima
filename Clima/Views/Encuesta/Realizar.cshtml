@model Clima.Models.ViewModels.Encuesta
@{
    ViewBag.Title = "Encuesta";
}



@using (Html.BeginForm("Realizar", "Encuesta", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <h3>
        @Model.Descripcion
    </h3>

    @Html.HiddenFor(model => model.Descripcion)
    @Html.HiddenFor(model => model.IdEncuesta)
    @Html.HiddenFor(model => model.Nombre)

    <hr />

    <div class="container">
        @{ bool referencia = false; }
        @for (int i = 0; i < Model.EncuestaPreguntas.Count(); i++)
        {
            int b = i + 1;

            @Html.HiddenFor(model => Model.EncuestaPreguntas[i].TipoPregunta.Tipo)
            @Html.HiddenFor(model => Model.EncuestaPreguntas[i].TipoPregunta.IdTipoPregunta)
            @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Cuestionario.IdCuestionario)
            @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Id)

            if (!referencia)
            {
                <h5>Referencias</h5>
                for (int o = 0; o < Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion.Count(); o++)
                {
                    <div class="row">
                        @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Cuestionario.IdCuestionario)
                        <div class="col-12" style="font-size:smaller">
                            @Html.Label(Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion[o].Id.ToString())
                            -
                            @Html.Label(Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion[o].Descripcion)
                        </div>
                    </div>
                }
                referencia = true;
            }
            <br />
            switch (Model.EncuestaPreguntas[i].TipoPregunta.Tipo.ToLower())
            {
                case "afirmaciones":
                    <div class="row">
                        <div class="col-6">
                            <h6><b> @b.ToString().  @Model.EncuestaPreguntas[i].Cuestionario.Enunciado</b></h6>
                        </div>
                        <div class="col-6">
                            <div class="row">
                                @for (int o = 0; o < Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion.Count(); o++)
                                {
                                    int num = @o + 1;

                                    <div class="form-group" style="font-size:smaller">
                                        <div class="col-2">
                                            <div class="checkbox">
                                                @num.ToString()
                                                @Html.RadioButtonFor(model => Model.EncuestaPreguntas[i].Cuestionario.SelectId, Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion[o].Id)
                                            </div>
                                        </div>

                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    break;
                case "selección multiple":
                    <h6><b> @b.ToString().  @Model.EncuestaPreguntas[i].Cuestionario.Enunciado</b></h6>
                    for (int o = 0; o < Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion.Count(); o++)
                    {
                        <div class="form-group" style="font-size:smaller">
                            @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Cuestionario.IdCuestionario)
                            @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Cuestionario.Enunciado)
                            <div class="col-sm-10">
                                <div class="checkbox">
                                    @Html.RadioButtonFor(model => Model.EncuestaPreguntas[i].Cuestionario.SelectId, Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion[o].Id) @Html.Label(Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion[o].Descripcion)
                                </div>
                            </div>
                        </div>
                    }
                    break;

                case "preguntas abiertas":
                    <h6><b> @b.ToString().  @Model.EncuestaPreguntas[i].Cuestionario.Enunciado</b></h6>
                    for (int p = 0; p < Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion.Count(); p++)
                    {
                        @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Cuestionario.IdCuestionario)
                        @Html.HiddenFor(model => Model.EncuestaPreguntas[i].Cuestionario.Enunciado)
                        <div style="font-size:smaller">
                            <p>
                                @Html.TextBoxFor(m => Model.EncuestaPreguntas[i].Cuestionario.OpcionesSeleccion[p].Respuesta, new { @class = "form-control" })
                            </p>
                        </div>
                    }

                    break;
            }
            <br />
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-lg btn-primary" value="Registrar" />
            </div>
        </div>
    </div>

}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}